package Models;

import Helper.JDBC;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Handles SQL queries for Division data.
 */
public class DivisionDataBase {

    /** Gets a list of Divisions
     * @return ObservableList of Division Objects
     * @throws SQLException SQLException
     */
    public static ObservableList<Division> getDivisions() throws SQLException {

        ObservableList<Division> divisions = FXCollections.observableArrayList();

        String query = "SELECT * FROM first_level_divisions;";

        DataBaseQuery.setPreparedStatement(JDBC.getConnection(), query);
        PreparedStatement preparedStatement = DataBaseQuery.getPreparedStatement();

        try {
            preparedStatement.execute();
            ResultSet results = preparedStatement.getResultSet();

            while (results.next()) {

                Division newDivision = new Division(
                        results.getInt("Division_ID"),
                        results.getString("Division"),
                        results.getInt("COUNTRY_ID")
                );

                divisions.add(newDivision);
            }

            return divisions;
        }

        catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
            return null;
        }
    }

    /** Gets a Division by Division Name
     * @param division division name
     * @return Division
     * @throws SQLException SQLException
     */
    public static Division getDivisionId(String division) throws SQLException {

        String query = "SELECT * FROM first_level_divisions WHERE Division=?";

        DataBaseQuery.setPreparedStatement(JDBC.getConnection(), query);
        PreparedStatement preparedStatement = DataBaseQuery.getPreparedStatement();

        preparedStatement.setString(1, division);

        try {
            preparedStatement.execute();
            ResultSet results = preparedStatement.getResultSet();

            while (results.next()) {
                Division newDivision = new Division(
                        results.getInt("Division_ID"),
                        results.getString("Division"),
                        results.getInt("COUNTRY_ID")
                );

                return newDivision;
            }

        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }

        return null;
    }

    /**Gets a List of Divisions by Country
     * @param country Country Name
     * @return ObservableList Division
     * @throws SQLException SQLException
     */
    public static ObservableList<Division> getDivisionsByCountry(String country) throws SQLException {

        Country newCountry = CountryDatabase.getCountryId(country);

        ObservableList<Division> divisions = FXCollections.observableArrayList();

        String query = "SELECT * FROM first_level_divisions WHERE COUNTRY_ID=?;";

        DataBaseQuery.setPreparedStatement(JDBC.getConnection(), query);
        PreparedStatement preparedStatement = DataBaseQuery.getPreparedStatement();

        preparedStatement.setInt(1, newCountry.getCountryId());

        try {
            preparedStatement.execute();
            ResultSet results = preparedStatement.getResultSet();

            // Forward scroll resultSet
            while (results.next()) {

                Division newDivision = new Division(
                        results.getInt("Division_ID"),
                        results.getString("Division"),
                        results.getInt("COUNTRY_ID")
                );

                divisions.add(newDivision);
            }

            return divisions;
        }

        catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
            return null;
        }
    }
}
